<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>websockets on Ilija Eftimov ⚡️</title><link>https://ieftimov.com/tags/websockets/</link><description>Recent content in websockets on Ilija Eftimov ⚡️</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright 2022 © Ilija Eftimov</copyright><lastBuildDate>Fri, 13 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://ieftimov.com/tags/websockets/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing in Go: WebSockets</title><link>https://ieftimov.com/post/testing-in-go-websockets/</link><pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate><guid>https://ieftimov.com/post/testing-in-go-websockets/</guid><description>WebSockets offer duplex communication from a non-trusted source to a server that we own across a TCP socket connection. This means that, instead of continually polling the web server for updates and having to perform the whole TCP dance with each request, we can maintain a single TCP socket connection and then send and listen to messages on said connection.
In Go&amp;rsquo;s ecosystem there are few different implementations of the WebSocket protocol.</description></item></channel></rss>