<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Minitest on Ilija Eftimov</title>
    <link>https://ieftimov.com/tags/minitest/</link>
    <description>Recent content in Minitest on Ilija Eftimov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 14 Jul 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ieftimov.com/tags/minitest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Test Doubles: in theory, in Minitest and in RSpec</title>
      <link>https://ieftimov.com/post/test-doubles-theory-minitest-rspec/</link>
      <pubDate>Wed, 05 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/test-doubles-theory-minitest-rspec/</guid>
      <description>Those of us that do Test Driven Development have heard about doubles, mocks, stubs, fakes and spies multiple times. Unfortunately there is a ton of confusion about all these words and their meaning. Let&amp;rsquo;s see what each an every one of these really mean, where we should use them and how the popular testing frameworks for Ruby implement these.
Test Doubles So, first things first. One of the biggest misconceptions is that doubles are types of objects that are used in testing.</description>
    </item>
    
    <item>
      <title>Exception handling and testing it with Minitest</title>
      <link>https://ieftimov.com/post/exception-handling-and-testing/</link>
      <pubDate>Wed, 29 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/exception-handling-and-testing/</guid>
      <description>When testing our code, we usually go for the happy path &amp;trade;. We are awesome developers, we test our code, we are careful and there&amp;rsquo;s no way our code might crash. Or not really? I often try to think of software as a live being. It thinks, it does stuff and sometimes it gets some things wrong. Just like us. We sometimes trip up while walking, we drop our keys or forget them on our desk at the office.</description>
    </item>
    
    <item>
      <title>Migrating a test suite from RSpec to Minitest</title>
      <link>https://ieftimov.com/post/migrate-rspec-to-minitest/</link>
      <pubDate>Tue, 14 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/migrate-rspec-to-minitest/</guid>
      <description>I have always wanted to have some fun with Minitest but until this weekend I never got the chance to do it. For those of you that don&amp;rsquo;t know, Minitest is a suite of testing facilities, that support TDD, BDD, mocking and benchmarking. Having wanted to play with Minitest, this weekend I decided that I will migrate the test suite of a gem of mine, from RSpec to Minitest. Read on to see how it all went.</description>
    </item>
    
  </channel>
</rss>