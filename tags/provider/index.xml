<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>provider on Ilija Eftimov</title>
    <link>https://ieftimov.com/tags/provider/</link>
    <description>Recent content in provider on Ilija Eftimov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 2014 - 2020 Ilija Eftimov</copyright>
    <lastBuildDate>Wed, 25 Feb 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ieftimov.com/tags/provider/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        <item>
          <title>AngularJS Services Part 1: Provider</title>
          <link>https://ieftimov.com/post/angularjs-services-part-1/</link>
          <pubDate>Wed, 25 Feb 2015 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/post/angularjs-services-part-1/</guid>
          <description>I started using AngularJS couple of months ago, when we got a new client that wanted us to help with building an app written in Angular.
After couple of months of using it, I found myself struggling with uber-phat controllers and I started thinking of solutions about extracting knowledge out of the controller into separate entities. Also, having the ability to easily inject those entities back into the controller is a must.</description>
        </item>
      
    
      
        <item>
          <title>SOLID Principles in Ruby</title>
          <link>https://ieftimov.com/post/solid-principles-ruby/</link>
          <pubDate>Thu, 05 Jun 2014 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/post/solid-principles-ruby/</guid>
          <description>Regardless of your knowledge level, as a programmer you love to write awesome code. It&#39;s what we do. We like it and we do it every single day. But, we all know that writing awesome code is not easy at all. So, how can we improve the code we produce every day?
An awareness (or a reminder!) of SOLID principles is beneficial here. SOLID is a group of five principles that when applied correctly can help us produce better code.</description>
        </item>
      
    
  </channel>
</rss>


