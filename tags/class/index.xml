<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>class on Ilija Eftimov ⚡️</title><link>https://ieftimov.com/tags/class/</link><description>Recent content in class on Ilija Eftimov ⚡️</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright 2021 © Ilija Eftimov</copyright><lastBuildDate>Mon, 28 Dec 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://ieftimov.com/tags/class/index.xml" rel="self" type="application/rss+xml"/><item><title>Refactoring in Ruby: TDD your way through Extract Class</title><link>https://ieftimov.com/post/tdd-extract-class/</link><pubDate>Mon, 28 Dec 2015 00:00:00 +0000</pubDate><guid>https://ieftimov.com/post/tdd-extract-class/</guid><description>There are a lot of refactoring patterns available out there for us. I assume that most of us use these patterns, at certain times without being aware that those refactoring steps are defined as a pattern in the past. In this post, I will take you through an example of refactoring Ruby code with the Extract Class pattern by using Test-Driven Development.
Let&amp;rsquo;s dive in!
What went wrong at the test?</description></item></channel></rss>