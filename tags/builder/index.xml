<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>builder on Ilija Eftimov ⚡️</title><link>https://ieftimov.com/tags/builder/</link><description>Recent content in builder on Ilija Eftimov ⚡️</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright 2021 © Ilija Eftimov</copyright><lastBuildDate>Wed, 13 Jan 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://ieftimov.com/tags/builder/index.xml" rel="self" type="application/rss+xml"/><item><title>Refactoring in Ruby: The right place for a Builder?</title><link>https://ieftimov.com/post/refactoring-builder-pattern/</link><pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate><guid>https://ieftimov.com/post/refactoring-builder-pattern/</guid><description>Recently I started tackling refactoring in Ruby with my blog posts. It seems that it&amp;rsquo;s one of the most popular topics that people would like to read about, so here I am with another installment of refactoring in Ruby. This time, we will see if it&amp;rsquo;s the right time and place for a Builder&amp;hellip; whatever that means.
Just a bit of backstory In my last post on refactoring in Ruby, I covered how to detect and refactor the long parameters code smell.</description></item></channel></rss>