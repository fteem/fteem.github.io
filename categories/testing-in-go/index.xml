<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing-in-go on Ilija Eftimov üë®‚ÄçüöÄ</title>
    <link>https://ieftimov.com/categories/testing-in-go/</link>
    <description>Recent content in testing-in-go on Ilija Eftimov üë®‚ÄçüöÄ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 22 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ieftimov.com/categories/testing-in-go/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        <item>
          <title>Testing in Go: Stop Leaking Files</title>
          <link>https://ieftimov.com/posts/testing-in-go-stop-leaking-files/</link>
          <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-stop-leaking-files/</guid>
          <description>No test suite is perfect.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: WebSockets</title>
          <link>https://ieftimov.com/posts/testing-in-go-websockets/</link>
          <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-websockets/</guid>
          <description>WebSockets offer duplex communication from a non-trusted source to a server that we own across a TCP socket connection.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: HTTP Servers</title>
          <link>https://ieftimov.com/posts/testing-in-go-testing-http-servers/</link>
          <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-testing-http-servers/</guid>
          <description>Go&amp;rsquo;s a great hammer for a lot of nails, one of the areas where I find it fitting is building HTTP servers.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Clean Tests Using t.Cleanup</title>
          <link>https://ieftimov.com/posts/testing-in-go-clean-tests-using-t-cleanup/</link>
          <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-clean-tests-using-t-cleanup/</guid>
          <description>Go v1.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Golden Files</title>
          <link>https://ieftimov.com/posts/testing-in-go-golden-files/</link>
          <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-golden-files/</guid>
          <description>Hardcoding the expected values in an assertion is a straightforward approach in testing.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Test Doubles by Example</title>
          <link>https://ieftimov.com/posts/testing-in-go-test-doubles-by-example/</link>
          <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-test-doubles-by-example/</guid>
          <description>One of the biggest misconceptions is that doubles are a specific implementation of mocks or other testing constructs that we use in testing.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Dependency Injection</title>
          <link>https://ieftimov.com/posts/testing-in-go-dependency-injection/</link>
          <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-dependency-injection/</guid>
          <description>In software engineering, over the years folks have developed many patterns, techniques and refactoring maneuvers.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Fixtures</title>
          <link>https://ieftimov.com/posts/testing-in-go-fixtures/</link>
          <pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-fixtures/</guid>
          <description>When I was researching the topic of test fixtures, I couldn&amp;rsquo;t find much about their beginnings.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Subtests</title>
          <link>https://ieftimov.com/posts/testing-in-go-subtests/</link>
          <pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-subtests/</guid>
          <description>Before we begin: The content in this article assumes knowledge of table-driven tests in Go.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Table-Driven Tests</title>
          <link>https://ieftimov.com/posts/testing-in-go-table-driven-tests/</link>
          <pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-table-driven-tests/</guid>
          <description>Coming from Ruby, which has excellent testing tools and libraries, the notion of table-driven tests was unusual for me.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: go test</title>
          <link>https://ieftimov.com/posts/testing-in-go-go-test/</link>
          <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-go-test/</guid>
          <description>If you remember anything from this article, remember this: go test is a command that automates the execution of test files and functions in a Go project.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Naming Conventions</title>
          <link>https://ieftimov.com/posts/testing-in-go-naming-conventions/</link>
          <pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-naming-conventions/</guid>
          <description>Programming languages and tools often have conventions.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Writing Practical Failure Messages</title>
          <link>https://ieftimov.com/posts/testing-in-go-writing-practical-failure-messages/</link>
          <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-writing-practical-failure-messages/</guid>
          <description>All developers appreciate code that works, yet we spend much of our working hours debugging existing code.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Failing Tests</title>
          <link>https://ieftimov.com/posts/testing-in-go-failing-tests/</link>
          <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-failing-tests/</guid>
          <description>A short overview of the testing package # The testing package from Golang&amp;rsquo;s standard library provides support for automated testing of Go packages.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: First Principles</title>
          <link>https://ieftimov.com/posts/testing-in-go-first-principles/</link>
          <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-first-principles/</guid>
          <description>If you have any programming experience, whether that&amp;rsquo;s as a student or a professional, there&amp;rsquo;s a good chance you have heard about testing.</description>
        </item>
      
    
  </channel>
</rss>
