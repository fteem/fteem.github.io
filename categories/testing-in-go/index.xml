<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing-in-go on Ilija Eftimov</title>
    <link>https://ieftimov.com/categories/testing-in-go/</link>
    <description>Recent content in testing-in-go on Ilija Eftimov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 26 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ieftimov.com/categories/testing-in-go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing in Go: Failing Tests</title>
      <link>https://ieftimov.com/post/testing-in-go-failing-tests/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/testing-in-go-failing-tests/</guid>
      <description>In the previous article on testing in Golang, titled Testing in Go: First Principles, we looked at what testing looks like in Golang. In this article, we will do a deeper dive in the testing package. More specifically, we will take a look at the different ways we can fail tests in our test suites and when and how we should use these techniques.
Without further ado, let&amp;rsquo;s take a look under the covers in the testing package.</description>
    </item>
    
    <item>
      <title>Testing in Go: First Principles</title>
      <link>https://ieftimov.com/post/testing-in-go-first-principles/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/testing-in-go-first-principles/</guid>
      <description>If you have any programming experience, whether that&amp;rsquo;s as a student or a professional, there&amp;rsquo;s a good chance you have heard about testing. It&amp;rsquo;s an ominpresent topic, be it on conferences, books or articles. (See what I did there?)
Also, it seems like a topic that everyone agrees on - yes, testing is good and we should do it. There are many reasons why folks consider testing good for you code.</description>
    </item>
    
  </channel>
</rss>