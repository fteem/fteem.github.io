<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Elixir on Ilija Eftimov</title>
    <link>https://ieftimov.com/categories/elixir/</link>
    <description>Recent content in Elixir on Ilija Eftimov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Oct 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ieftimov.com/categories/elixir/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OTP in Elixir: Learn GenServer by Building Your Own URL Shortener</title>
      <link>https://ieftimov.com/post/otp-elixir-genserver-build-own-url-shortener/</link>
      <pubDate>Sat, 26 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/otp-elixir-genserver-build-own-url-shortener/</guid>
      <description>Looking at any programming language you will (hopefully!) find a rich and useful standard library. I started my professional career as a software developer with Ruby, which has quite an easy-to-use and well-documented standard library with a plethora of modules and classes to use. Personally, I find the Enumerable module in Ruby with all its nice methods simply brilliant.
You might be coming from a different language, but I am sure that any serious programming language out there has a set of classes, modules, methods and functions to make your life (and work) easy.</description>
    </item>
    
    <item>
      <title>Understanding the basics of Elixir&#39;s concurrency model</title>
      <link>https://ieftimov.com/post/understanding-basics-elixir-concurrency-model/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/understanding-basics-elixir-concurrency-model/</guid>
      <description>If you come from an object-oriented background, you might have tried concurrency in your favourite OO language before. Your mileage will vary, but in general OO languages are harder to work with when it comes to concurrency. This is due to their nature - they are designed to keep state in memory and require more expertise and experience to be successful with.
How does Elixir stand up to other languages when it comes to concurrency?</description>
    </item>
    
    <item>
      <title>A deeper dive in Elixir&#39;s Plug</title>
      <link>https://ieftimov.com/post/a-deeper-dive-in-elixir-plug/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/a-deeper-dive-in-elixir-plug/</guid>
      <description>Being new to Elixir and Phoenix, I spend quite some time in the projects&amp;rsquo; documentation. One thing that stood out for me recently is the first sentence of Phoenix&amp;rsquo;s Plug documentation:
 Plug lives at the heart of Phoenixâ€™s HTTP layer and Phoenix puts Plug front and center.
 So naturally, I felt compelled to take a deeper dive into Plug and understand it better. I hope the following article will help you out in understanding Plug.</description>
    </item>
    
    <item>
      <title>Validate your passwords using Elixir and haveibeenpwned.com&#39;s API</title>
      <link>https://ieftimov.com/post/haveibeenpwned-password-lookup-elixir/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/haveibeenpwned-password-lookup-elixir/</guid>
      <description>Unless you&amp;rsquo;ve been living under a rock for the last couple of years, you probably know what two-factor authentication (2FA) is. It&amp;rsquo;s quite a neat trick actually - you have a password that you have to (obviously) enter correctly (first factor), but you also have to receive a second (random) code through a different medium, sometimes on a different device, that you have to enter to log in (second factor).</description>
    </item>
    
    <item>
      <title>Writing command line apps with Elixir</title>
      <link>https://ieftimov.com/post/writing-elixir-cli-apps/</link>
      <pubDate>Fri, 27 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/writing-elixir-cli-apps/</guid>
      <description>Elixir is a really cool language. Although I do not have much experience with it (yet), I am always trying to build interesting stuff with it and learn the built-in tools. In this blog post I decided to show you how to build a self-contained command line application with Elixir, with some help from escript.
Escript Erlang and Elixir have this cool thing called escript. It&amp;rsquo;s basically a tool that compiles an Elixir app that you have as a command line application.</description>
    </item>
    
    <item>
      <title>Filter request params from Phoenix logs</title>
      <link>https://ieftimov.com/post/filter-params-phoenix/</link>
      <pubDate>Fri, 23 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/filter-params-phoenix/</guid>
      <description>Phoenix is a really powerful and customizable framework. One of it&amp;rsquo;s small but important configurations is filtering custom params from the logs. I am sure that this will be more interesting to beginner than experienced developers, but nevertheless, let&amp;rsquo;s see what&amp;rsquo;s the motivation behind this and how to do it in Phoenix.
Motivation First, I&amp;rsquo;d like you to understand the motivation behind this and why this is useful. Think about it.</description>
    </item>
    
    <item>
      <title>How to set tests as pending in your ExUnit suite</title>
      <link>https://ieftimov.com/post/pending-tests-exunit/</link>
      <pubDate>Sun, 18 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/pending-tests-exunit/</guid>
      <description>Elixir&amp;rsquo;s built in testing library is called ExUnit. It&amp;rsquo;s a proper testing framework, which, although simple, gives the developers a lot of power and flexibility. If you come from Ruby land, I am sure you&amp;rsquo;ve been in a position where you want to set a certain test to be skipped. For example, RSpec in Ruby does it with the pending method. Let&amp;rsquo;s see how we can customize our test suite so ExUnit can skip over tests in our test suite.</description>
    </item>
    
    <item>
      <title>Write and publish your first Elixir library</title>
      <link>https://ieftimov.com/post/writing-elixir-library/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/writing-elixir-library/</guid>
      <description>As some of you have heard lately, Elixir is the new hotness. Is it just hype? Well, I thought so at first, but I told myself &amp;ldquo;heck, even if it&amp;rsquo;s a waste of time, at least I&amp;rsquo;ll broaden my horizons&amp;rdquo;. Which, if you think about it, it not really is a waste of time.
Long story short, after couple of weeks of fiddling with the language, mostly by playing with it&amp;rsquo;s web framework I am delighted to say that it&amp;rsquo;s a really cool language that you should try out and also, I published a really small API wrapper for Elixir.</description>
    </item>
    
  </channel>
</rss>