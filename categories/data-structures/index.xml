<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data-structures on Ilija Eftimov 👨‍🚀</title>
    <link>https://ieftimov.com/categories/data-structures/</link>
    <description>Recent content in data-structures on Ilija Eftimov 👨‍🚀</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 11 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ieftimov.com/categories/data-structures/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        <item>
          <title>Barebones model of Spotify&#39;s &#39;Recently Played&#39; screen using a Least Recently Used (LRU) cache in Golang</title>
          <link>https://ieftimov.com/posts/spotify-recently-played-least-recently-used-cache-golang/</link>
          <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/spotify-recently-played-least-recently-used-cache-golang/</guid>
          <description>One of the most used caching schemes is Least Recently Used (LRU).</description>
        </item>
      
    
      
        <item>
          <title>When and Why to use a Least Frequently Used (LFU) cache with an implementation in Golang</title>
          <link>https://ieftimov.com/posts/when-why-least-frequently-used-cache-implementation-golang/</link>
          <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/when-why-least-frequently-used-cache-implementation-golang/</guid>
          <description>Over the years, people involved in computer science and engineering have worked really hard on optimisations of various natures.</description>
        </item>
      
    
      
        <item>
          <title>Golang Datastructures: Trees</title>
          <link>https://ieftimov.com/posts/golang-datastructures-trees/</link>
          <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/golang-datastructures-trees/</guid>
          <description>You can spend quite a bit of your programming career without working with trees, or just by simply avoiding them if you don’t understand them (which is what I had been doing for a while).</description>
        </item>
      
    
      
        <item>
          <title>Data structures in Go: Stacks and queues</title>
          <link>https://ieftimov.com/posts/golang-datastructures-stacks-queues/</link>
          <pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/golang-datastructures-stacks-queues/</guid>
          <description>In a previous post1, we took a look at linked lists and how we can apply them in a hypothetical use-case.</description>
        </item>
      
    
      
        <item>
          <title>Data structures in Go: Linked lists</title>
          <link>https://ieftimov.com/posts/golang-datastructures-linked-lists/</link>
          <pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/golang-datastructures-linked-lists/</guid>
          <description>Data structures and algorithms are the bread and butter of computer science.</description>
        </item>
      
    
  </channel>
</rss>
