<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RxJS on Ilija Eftimov</title>
    <link>https://ieftimov.com/categories/rxjs/</link>
    <description>Recent content in RxJS on Ilija Eftimov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 2014 - 2019 Ilija Eftimov</copyright>
    <lastBuildDate>Sun, 24 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ieftimov.com/categories/rxjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building a Weather Widget using RxJS</title>
      <link>https://ieftimov.com/post/building-a-weather-widget-using-rxjs/</link>
      <pubDate>Sun, 24 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/post/building-a-weather-widget-using-rxjs/</guid>
      <description>Reactive Programming is a very interesting programming paradigm that I started pondering with last week, which ended up in an article on this blog. Today, I will show you how you can write a very simple weather widget with reactive programming, using RxJS. Or, in other words, how to do HTTP calls in reactive programming fashion.
RxJS RxJS is an acronym for Reactive Extensions for JavaScript. Simply put, it is a set of libraries to do asynchronous and event-based programming using observable collections and iterators.</description>
    </item>
    
  </channel>
</rss>