<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Ilija Eftimov üë®‚ÄçüöÄ</title>
    <link>https://ieftimov.com/categories/go/</link>
    <description>Recent content in go on Ilija Eftimov üë®‚ÄçüöÄ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 22 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ieftimov.com/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        <item>
          <title>Testing in Go: Stop Leaking Files</title>
          <link>https://ieftimov.com/posts/testing-in-go-stop-leaking-files/</link>
          <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-stop-leaking-files/</guid>
          <description>No test suite is perfect.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: HTTP Servers</title>
          <link>https://ieftimov.com/posts/testing-in-go-testing-http-servers/</link>
          <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-testing-http-servers/</guid>
          <description>Go&amp;rsquo;s a great hammer for a lot of nails, one of the areas where I find it fitting is building HTTP servers.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Clean Tests Using t.Cleanup</title>
          <link>https://ieftimov.com/posts/testing-in-go-clean-tests-using-t-cleanup/</link>
          <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-clean-tests-using-t-cleanup/</guid>
          <description>Go v1.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Golden Files</title>
          <link>https://ieftimov.com/posts/testing-in-go-golden-files/</link>
          <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-golden-files/</guid>
          <description>Hardcoding the expected values in an assertion is a straightforward approach in testing.</description>
        </item>
      
    
      
        <item>
          <title>Make resilient Go net/http servers using timeouts, deadlines and context cancellation</title>
          <link>https://ieftimov.com/posts/make-resilient-golang-net-http-servers-using-timeouts-deadlines-context-cancellation/</link>
          <pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/make-resilient-golang-net-http-servers-using-timeouts-deadlines-context-cancellation/</guid>
          <description>When it comes to timeouts, there are two types of people: those who know how tricky they can be, and those who are yet to find out.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Test Doubles by Example</title>
          <link>https://ieftimov.com/posts/testing-in-go-test-doubles-by-example/</link>
          <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-test-doubles-by-example/</guid>
          <description>One of the biggest misconceptions is that doubles are a specific implementation of mocks or other testing constructs that we use in testing.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Dependency Injection</title>
          <link>https://ieftimov.com/posts/testing-in-go-dependency-injection/</link>
          <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-dependency-injection/</guid>
          <description>In software engineering, over the years folks have developed many patterns, techniques and refactoring maneuvers.</description>
        </item>
      
    
      
        <item>
          <title>Simple Golang database seeding abstraction for Gorm</title>
          <link>https://ieftimov.com/posts/simple-golang-database-seeding-abstraction-gorm/</link>
          <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/simple-golang-database-seeding-abstraction-gorm/</guid>
          <description>One of the most feature-full ORMs for Go that I have worked with is Gorm.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Fixtures</title>
          <link>https://ieftimov.com/posts/testing-in-go-fixtures/</link>
          <pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-fixtures/</guid>
          <description>When I was researching the topic of test fixtures, I couldn&amp;rsquo;t find much about their beginnings.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Subtests</title>
          <link>https://ieftimov.com/posts/testing-in-go-subtests/</link>
          <pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-subtests/</guid>
          <description>Before we begin: The content in this article assumes knowledge of table-driven tests in Go.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Table-Driven Tests</title>
          <link>https://ieftimov.com/posts/testing-in-go-table-driven-tests/</link>
          <pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-table-driven-tests/</guid>
          <description>Coming from Ruby, which has excellent testing tools and libraries, the notion of table-driven tests was unusual for me.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: go test</title>
          <link>https://ieftimov.com/posts/testing-in-go-go-test/</link>
          <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-go-test/</guid>
          <description>If you remember anything from this article, remember this: go test is a command that automates the execution of test files and functions in a Go project.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Naming Conventions</title>
          <link>https://ieftimov.com/posts/testing-in-go-naming-conventions/</link>
          <pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-naming-conventions/</guid>
          <description>Programming languages and tools often have conventions.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Writing Practical Failure Messages</title>
          <link>https://ieftimov.com/posts/testing-in-go-writing-practical-failure-messages/</link>
          <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-writing-practical-failure-messages/</guid>
          <description>All developers appreciate code that works, yet we spend much of our working hours debugging existing code.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: Failing Tests</title>
          <link>https://ieftimov.com/posts/testing-in-go-failing-tests/</link>
          <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-failing-tests/</guid>
          <description>A short overview of the testing package # The testing package from Golang&amp;rsquo;s standard library provides support for automated testing of Go packages.</description>
        </item>
      
    
      
        <item>
          <title>Testing in Go: First Principles</title>
          <link>https://ieftimov.com/posts/testing-in-go-first-principles/</link>
          <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/testing-in-go-first-principles/</guid>
          <description>If you have any programming experience, whether that&amp;rsquo;s as a student or a professional, there&amp;rsquo;s a good chance you have heard about testing.</description>
        </item>
      
    
      
        <item>
          <title>Deep Dive in the Upcoming Go Error Inspection Changes</title>
          <link>https://ieftimov.com/posts/deep-dive-in-upcoming-go-error-inspection-changes/</link>
          <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/deep-dive-in-upcoming-go-error-inspection-changes/</guid>
          <description>The team behind the language started working on a document titled &amp;ldquo;Go 2 Draft Designs&amp;rdquo;.</description>
        </item>
      
    
      
        <item>
          <title>Tell your team you are running late using Google Home, Google Cloud Functions, Golang and Twilio</title>
          <link>https://ieftimov.com/posts/tell-team-running-late-google-home-google-functions-golang-twilio/</link>
          <pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/tell-team-running-late-google-home-google-functions-golang-twilio/</guid>
          <description>In this age of cloud platforms, Internet of Things and SaaS products that are easy to integrate with, the effort of automating parts of your life is shrinking down substantially with every year that goes by.</description>
        </item>
      
    
      
        <item>
          <title>Barebones model of Spotify&#39;s &#39;Recently Played&#39; screen using a Least Recently Used (LRU) cache in Golang</title>
          <link>https://ieftimov.com/posts/spotify-recently-played-least-recently-used-cache-golang/</link>
          <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/spotify-recently-played-least-recently-used-cache-golang/</guid>
          <description>One of the most used caching schemes is Least Recently Used (LRU).</description>
        </item>
      
    
      
        <item>
          <title>When and Why to use a Least Frequently Used (LFU) cache with an implementation in Golang</title>
          <link>https://ieftimov.com/posts/when-why-least-frequently-used-cache-implementation-golang/</link>
          <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/when-why-least-frequently-used-cache-implementation-golang/</guid>
          <description>Over the years, people involved in computer science and engineering have worked really hard on optimisations of various natures.</description>
        </item>
      
    
      
        <item>
          <title>Golang Datastructures: Trees</title>
          <link>https://ieftimov.com/posts/golang-datastructures-trees/</link>
          <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/golang-datastructures-trees/</guid>
          <description>You can spend quite a bit of your programming career without working with trees, or just by simply avoiding them if you don‚Äôt understand them (which is what I had been doing for a while).</description>
        </item>
      
    
      
        <item>
          <title>Data structures in Go: Stacks and queues</title>
          <link>https://ieftimov.com/posts/golang-datastructures-stacks-queues/</link>
          <pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/golang-datastructures-stacks-queues/</guid>
          <description>In a previous post1, we took a look at linked lists and how we can apply them in a hypothetical use-case.</description>
        </item>
      
    
      
        <item>
          <title>Data structures in Go: Linked lists</title>
          <link>https://ieftimov.com/posts/golang-datastructures-linked-lists/</link>
          <pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/golang-datastructures-linked-lists/</guid>
          <description>Data structures and algorithms are the bread and butter of computer science.</description>
        </item>
      
    
      
        <item>
          <title>Create and manage MacOS LaunchAgents using Go</title>
          <link>https://ieftimov.com/posts/create-manage-macos-launchd-agents-golang/</link>
          <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/create-manage-macos-launchd-agents-golang/</guid>
          <description>If you have ever tried writing a daemon for MacOS you have met with launchd.</description>
        </item>
      
    
      
        <item>
          <title>Packing multiple binaries in a Golang package</title>
          <link>https://ieftimov.com/posts/golang-package-multiple-binaries/</link>
          <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
          
          <guid>https://ieftimov.com/posts/golang-package-multiple-binaries/</guid>
          <description>Recently, while writing a small Golang program for setting reminders I came across a small confusion that I guess most newcomers to Golang will have - how to organise a package in a way that will enable it to cleanly contain two or more binaries.</description>
        </item>
      
    
  </channel>
</rss>
