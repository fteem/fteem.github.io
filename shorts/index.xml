<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shorts on Ilija Eftimov ⚡️</title>
    <link>https://ieftimov.com/shorts/</link>
    <description>Recent content in Shorts on Ilija Eftimov ⚡️</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 16 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ieftimov.com/shorts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple Golang database seeding abstraction for Gorm</title>
      <link>https://ieftimov.com/shorts/simple-golang-database-seeding-abstraction-gorm/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ieftimov.com/shorts/simple-golang-database-seeding-abstraction-gorm/</guid>
      <description>One of the most feature-full ORMs for Go that I have worked with is Gorm. If you would like to learn more about it, I recommend checking out its official website and its documentation.
Recenlty I wanted to write a small database seeding abstraction. Database seeding is a process in which an initial set of data is provided to a database when it is being set up or installed.
Yet, in true Go fashion my goal was to keep the abstraction tiny, yet provide some structure to folks that would write seeds in this application.</description>
    </item>
    
  </channel>
</rss>